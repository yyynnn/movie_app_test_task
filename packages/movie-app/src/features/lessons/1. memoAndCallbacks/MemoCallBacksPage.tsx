import { Button, Input, Paper, Typography } from '@mui/material'
import React, { MouseEvent, useCallback, useState } from 'react'

import { uuid4 } from '../../../utils'
import { Pad, Spacer } from '../../primitives'
import { Cards } from './Cards'
import { TCard } from './types'

export const MemoCallBacksPage = (props: any) => {
  //state
  const [inputData, setInputData] = React.useState<TCard>({ name: '', time: '', id: '' })
  const [cards, setCards] = useState<TCard[]>([])

  // –≤–æ—Ç —Ç—É—Ç "–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è" –≤—Ä–µ–¥–∏—Ç, —Ç.–∫. –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–Ω—è—Ç—Å—è –∫–æ–¥ useCallback
  // –∫–æ–ª–±–µ–∫ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º, –ø–æ—ç—Ç–æ–º—É –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –µ–≥–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
  const addHandler = useCallback(() => {
    setCards([...cards, inputData])
  }, [inputData])

  // useCallback - –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  // ! –≤–∞–∂–Ω–æ, —á—Ç–æ useCallback –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∞ –Ω–µ –µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  // ! –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –ø—Ä–æ–ø –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–ª–µ–∑–Ω–∞
  // ! –Ω–æ –≤–∞–∂–Ω–æ –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–∫–∏–Ω—É—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤—Å–µ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏
  const removeHandler = useCallback(
    (returnValue: string) => {
      console.log('üê∏ Pepe said => removeHandler => val', returnValue)
      console.log('üê∏ Pepe said => removeHandler => cards', cards)

      const newCards = cards.filter((card) => {
        return card.name !== returnValue
      })
      setCards(newCards)
    },
    // —Å—é–¥–∞
    [cards]
  )

  const inputHandler = useCallback((event: any) => {
    const id = uuid4()
    // time - –Ω–µ—Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä,
    // –≤–∞–∂–Ω–æ –Ω–µ –∫–∞–∫, –∞ –≥–¥–µ (–∫–æ–º–ø–æ–∑–∏—Ü–∏—è) –∏ –æ—Ç–∫—É–¥–∞ (–ø—Ä–æ–≤–∞–π–¥–µ—Ä –¥–∞–Ω–Ω—ã—Ö)
    const currentTime = new Date().toLocaleString()
    // —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä —É–∂–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω –∫ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏
    const someTime = props.someTimeFromApi + ' ' + currentTime

    setInputData({ name: event.target.value, time: currentTime, id })
  }, [])

  // –∏—Ç–æ–≥: useCallback - –¥–ª—è –ü–ï–†–ï–î–ê–ß–ò —Ñ—É–Ω–∫—Ü–∏–∏(–∫–æ–ª–±–µ–∫–∞) –∫–∞–∫ –ø—Ä–æ–ø, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –≤ —Ü–∏–∫–ª–∞—Ö
  // –∏ —Ç–æ–ª—å–∫–æ –≤ –±–æ–ª—å—à–∏—Ö –Ω–∞–±–æ—Ä–∞—Ö –¥–∞–Ω–Ω—ã—Ö
  // –∏ –ø—Ä–∏ —Ç—è–∂–µ–ª–æ–π —Ä–∞–±–æ—Ç–µ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏

  return (
    <div>
      <Pad>
        <div>
          <Input value={inputData.name} onChange={inputHandler} />
          <Button onClick={addHandler}>Add</Button>
          <Spacer />
          <Cards cards={cards} removeHandler={removeHandler} />
        </div>
      </Pad>
    </div>
  )
}
